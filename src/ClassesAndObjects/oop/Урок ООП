Объектно-ориентированное программирование — это методология программирования,
в которой все важные вещи представлены объектами, каждый из которых является экземпляром
определенного класса, а классы образуют иерархию наследования.

ООП имеет четыре главные концепции, которые отличают его от остальных методологий программирования.
-Абстракция
-Инкапсуляция
-Наследование
-Полиморфизм

Язык Java создавался как объектно-ориентированный язык — это значит, что помимо примитивных типов в языке
принято оперировать объектами приближенными к реальным предметам.

Например, объект из реального мира «машина» обладает следующими характеристиками:
• бренд
• модель
• объем
• цвет
• пробег

Класс
Для того чтобы описывать объекты в Java, были придуманы классы. Класс — это специальная структура,
c помощью которой описываются будущие объекты в Java. Чтобы описать класс нужно:
1. Создать файл с именем класса и расширением Java
2. Внутри этого файла добавить код — class "Имя файла"

public class Car{
        String brand;
        String model;
        int volume;
        String color;
        int mileage;
}

Car car = new Car();
car.brand="BMW";
....

Объект
Если посмотрим на реальный мир, то увидим, что нас окружают объекты – люди, звери, птицы, машины и тд.
Всё это объекты, которые имеют свои характеристики и поведение.
Например, человек имеет рост, вес, имя, цвет волос и так далее. Человек также имеет определённое поведение.
Он дышит, видит, слышит, говорит и т.д.
В программах различные объекты взаимодействуют друг с другом, используя своё поведение.

В чем разница между объектом и классом?
Класс - некая абстракция, логическая структура, описывающая поведение и характеристики.
Объект - конкретный экземпляр класса. Например, конкретный ваш дом.
1. Класс - шаблон, по которому создаются объекты 2. Класс описывается
3. Класс определяется единожды
1. Объект - экземпляр класса
2. Сущность из реального мира
3. Физическая сущность
4. Объект создается
5. Объект можно создавать, как правило, много раз

Понятие полей и методов класса
Рассмотрим более подробное описание класса в Java:
1. Каждый класс описывается в пределах фигурных скобок class Car { ... }.
2. Каждый класс может содержать поля - это объявление характеристик объекта. Если посмотреть пример выше - то полями класса Car являются brand, model, volume, color, mileage.
3. Поле может быть, как примитивного, так и ссылочного типа (любой объект).
4. Класс может содержать в себе методы - функции которые может выполнять объект.

Пример
Давайте создадим новый класс «музыкальная студия» со следующими полями:
• название
• владелец
• год основания
• количество выпущенных треков
Какие типы данных вы будете использовать для каждого из этих полей?



